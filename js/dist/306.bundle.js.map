{"version":3,"file":"306.bundle.js","mappings":"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","sources":["webpack://ulogger-server/./node_modules/ol/events/Event.js","webpack://ulogger-server/./node_modules/ol/ObjectEventType.js","webpack://ulogger-server/./node_modules/ol/Disposable.js","webpack://ulogger-server/./node_modules/ol/array.js","webpack://ulogger-server/./node_modules/ol/functions.js","webpack://ulogger-server/./node_modules/ol/obj.js","webpack://ulogger-server/./node_modules/ol/events/Target.js","webpack://ulogger-server/./node_modules/ol/events/EventType.js","webpack://ulogger-server/./node_modules/ol/events.js","webpack://ulogger-server/./node_modules/ol/Observable.js","webpack://ulogger-server/./node_modules/ol/util.js","webpack://ulogger-server/./node_modules/ol/Object.js","webpack://ulogger-server/./node_modules/ol/MapEventType.js","webpack://ulogger-server/./node_modules/ol/has.js","webpack://ulogger-server/./node_modules/ol/dom.js","webpack://ulogger-server/./node_modules/ol/control/Control.js","webpack://ulogger-server/./node_modules/ol/css.js","webpack://ulogger-server/./node_modules/ol/easing.js","webpack://ulogger-server/./node_modules/ol/control/Rotate.js","webpack://ulogger-server/./node_modules/ol/proj/Units.js","webpack://ulogger-server/./node_modules/ol/proj/Projection.js","webpack://ulogger-server/./node_modules/ol/proj/epsg3857.js","webpack://ulogger-server/./node_modules/ol/proj/epsg4326.js","webpack://ulogger-server/./node_modules/ol/proj/projections.js","webpack://ulogger-server/./node_modules/ol/proj/transforms.js","webpack://ulogger-server/./node_modules/ol/extent/Relationship.js","webpack://ulogger-server/./node_modules/ol/extent.js","webpack://ulogger-server/./node_modules/ol/math.js","webpack://ulogger-server/./node_modules/ol/coordinate.js","webpack://ulogger-server/./node_modules/ol/sphere.js","webpack://ulogger-server/./node_modules/ol/console.js","webpack://ulogger-server/./node_modules/ol/proj.js","webpack://ulogger-server/./node_modules/ol/control/ScaleLine.js","webpack://ulogger-server/./node_modules/ol/control/Zoom.js","webpack://ulogger-server/./node_modules/ol/asserts.js","webpack://ulogger-server/./node_modules/ol/transform.js","webpack://ulogger-server/./node_modules/ol/geom/flat/transform.js","webpack://ulogger-server/./node_modules/ol/geom/Geometry.js","webpack://ulogger-server/./node_modules/ol/geom/SimpleGeometry.js","webpack://ulogger-server/./node_modules/ol/geom/flat/closest.js","webpack://ulogger-server/./node_modules/ol/geom/flat/deflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/simplify.js","webpack://ulogger-server/./node_modules/ol/geom/flat/inflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/area.js","webpack://ulogger-server/./node_modules/ol/geom/LinearRing.js","webpack://ulogger-server/./node_modules/ol/geom/Point.js","webpack://ulogger-server/./node_modules/ol/geom/flat/contains.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ulogger-server/./node_modules/ol/geom/flat/segments.js","webpack://ulogger-server/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/reverse.js","webpack://ulogger-server/./node_modules/ol/geom/flat/orient.js","webpack://ulogger-server/./node_modules/ol/geom/Polygon.js","webpack://ulogger-server/./node_modules/ol/control/ZoomToExtent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interpolate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/length.js","webpack://ulogger-server/./node_modules/ol/geom/LineString.js","webpack://ulogger-server/./node_modules/ol/Feature.js","webpack://ulogger-server/./node_modules/ol/ImageState.js","webpack://ulogger-server/./node_modules/ol/size.js","webpack://ulogger-server/./node_modules/ol/style/Image.js","webpack://ulogger-server/./node_modules/color-space/rgb.js","webpack://ulogger-server/./node_modules/color-space/xyz.js","webpack://ulogger-server/./node_modules/color-space/luv.js","webpack://ulogger-server/./node_modules/color-space/lchuv.js","webpack://ulogger-server/./node_modules/color-parse/index.js","webpack://ulogger-server/./node_modules/color-space/hsl.js","webpack://ulogger-server/./node_modules/ol/color.js","webpack://ulogger-server/./node_modules/color-rgba/index.js","webpack://ulogger-server/./node_modules/ol/Image.js","webpack://ulogger-server/./node_modules/ol/style/IconImageCache.js","webpack://ulogger-server/./node_modules/ol/style/IconImage.js","webpack://ulogger-server/./node_modules/ol/style/Icon.js","webpack://ulogger-server/./node_modules/ol/CollectionEventType.js","webpack://ulogger-server/./node_modules/ol/Collection.js","webpack://ulogger-server/./node_modules/ol/layer/Property.js","webpack://ulogger-server/./node_modules/ol/layer/Base.js","webpack://ulogger-server/./node_modules/ol/render/EventType.js","webpack://ulogger-server/./node_modules/ol/ViewHint.js","webpack://ulogger-server/./node_modules/ol/ViewProperty.js","webpack://ulogger-server/./node_modules/ol/tilegrid/common.js","webpack://ulogger-server/./node_modules/ol/centerconstraint.js","webpack://ulogger-server/./node_modules/ol/resolutionconstraint.js","webpack://ulogger-server/./node_modules/ol/rotationconstraint.js","webpack://ulogger-server/./node_modules/ol/View.js","webpack://ulogger-server/./node_modules/ol/layer/Layer.js","webpack://ulogger-server/./node_modules/ol/colorlike.js","webpack://ulogger-server/./node_modules/ol/render/canvas.js","webpack://ulogger-server/./node_modules/ol/style/RegularShape.js","webpack://ulogger-server/./node_modules/ol/style/Circle.js","webpack://ulogger-server/./node_modules/ol/style/Fill.js","webpack://ulogger-server/./node_modules/ol/style/Stroke.js","webpack://ulogger-server/./node_modules/ol/style/Style.js","webpack://ulogger-server/./node_modules/ol/style/Text.js","webpack://ulogger-server/./node_modules/ol/expr/expression.js","webpack://ulogger-server/./node_modules/ol/expr/cpu.js","webpack://ulogger-server/./node_modules/ol/render/canvas/style.js","webpack://ulogger-server/./node_modules/ol/layer/BaseVector.js","webpack://ulogger-server/./node_modules/ol/renderer/Map.js","webpack://ulogger-server/./node_modules/ol/render/Event.js","webpack://ulogger-server/./node_modules/ol/renderer/Composite.js","webpack://ulogger-server/./node_modules/ol/layer/Group.js","webpack://ulogger-server/./node_modules/ol/MapEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventType.js","webpack://ulogger-server/./node_modules/ol/pointer/EventType.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventHandler.js","webpack://ulogger-server/./node_modules/ol/MapProperty.js","webpack://ulogger-server/./node_modules/ol/structs/PriorityQueue.js","webpack://ulogger-server/./node_modules/ol/TileState.js","webpack://ulogger-server/./node_modules/ol/TileQueue.js","webpack://ulogger-server/./node_modules/ol/control/Attribution.js","webpack://ulogger-server/./node_modules/ol/interaction/Property.js","webpack://ulogger-server/./node_modules/ol/interaction/Interaction.js","webpack://ulogger-server/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/Pointer.js","webpack://ulogger-server/./node_modules/ol/events/condition.js","webpack://ulogger-server/./node_modules/ol/interaction/DragPan.js","webpack://ulogger-server/./node_modules/ol/interaction/DragRotate.js","webpack://ulogger-server/./node_modules/ol/render/Box.js","webpack://ulogger-server/./node_modules/ol/interaction/DragBox.js","webpack://ulogger-server/./node_modules/ol/interaction/DragZoom.js","webpack://ulogger-server/./node_modules/ol/events/Key.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardPan.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ulogger-server/./node_modules/ol/Kinetic.js","webpack://ulogger-server/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchRotate.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchZoom.js","webpack://ulogger-server/./node_modules/ol/Map.js","webpack://ulogger-server/./node_modules/ol/control/defaults.js","webpack://ulogger-server/./node_modules/ol/interaction/defaults.js","webpack://ulogger-server/./node_modules/ol/Tile.js","webpack://ulogger-server/./node_modules/ol/ImageTile.js","webpack://ulogger-server/./node_modules/ol/reproj/Triangulation.js","webpack://ulogger-server/./node_modules/ol/reproj.js","webpack://ulogger-server/./node_modules/ol/reproj/Tile.js","webpack://ulogger-server/./node_modules/ol/reproj/common.js","webpack://ulogger-server/./node_modules/ol/structs/LRUCache.js","webpack://ulogger-server/./node_modules/ol/tilecoord.js","webpack://ulogger-server/./node_modules/ol/TileCache.js","webpack://ulogger-server/./node_modules/ol/source/TileEventType.js","webpack://ulogger-server/./node_modules/ol/source/Source.js","webpack://ulogger-server/./node_modules/ol/TileRange.js","webpack://ulogger-server/./node_modules/ol/tilegrid/TileGrid.js","webpack://ulogger-server/./node_modules/ol/tilegrid.js","webpack://ulogger-server/./node_modules/ol/source/Tile.js","webpack://ulogger-server/./node_modules/ol/tileurlfunction.js","webpack://ulogger-server/./node_modules/ol/source/UrlTile.js","webpack://ulogger-server/./node_modules/ol/source/TileImage.js","webpack://ulogger-server/./node_modules/ol/source/XYZ.js","webpack://ulogger-server/./node_modules/ol/source/OSM.js","webpack://ulogger-server/./node_modules/ol/Overlay.js","webpack://ulogger-server/./node_modules/ol/layer/TileProperty.js","webpack://ulogger-server/./node_modules/ol/layer/BaseTile.js","webpack://ulogger-server/./node_modules/ol/renderer/Layer.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ulogger-server/./node_modules/ol/layer/Tile.js","webpack://ulogger-server/./node_modules/ol/structs/RBush.js","webpack://ulogger-server/./node_modules/ol/render/Feature.js","webpack://ulogger-server/./node_modules/ol/geom/flat/center.js","webpack://ulogger-server/./node_modules/ol/source/VectorEventType.js","webpack://ulogger-server/./node_modules/ol/loadingstrategy.js","webpack://ulogger-server/./node_modules/ol/featureloader.js","webpack://ulogger-server/./node_modules/ol/source/Vector.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Instruction.js","webpack://ulogger-server/./node_modules/ol/render/VectorContext.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Builder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ulogger-server/./node_modules/ol/geom/flat/linechunk.js","webpack://ulogger-server/./node_modules/ol/geom/flat/straightchunk.js","webpack://ulogger-server/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ulogger-server/./node_modules/ol/geom/flat/textpath.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Executor.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Immediate.js","webpack://ulogger-server/./node_modules/ol/render/canvas/hitdetect.js","webpack://ulogger-server/./node_modules/ol/renderer/vector.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ulogger-server/./js/src/lib/ol.js","webpack://ulogger-server/./node_modules/ol/layer/Vector.js","webpack://ulogger-server/./node_modules/color-name/index.js","webpack://ulogger-server/./node_modules/rbush/rbush.min.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  compose as composeTransform,\n  makeInverse,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Control, Rotate, ScaleLine, Zoom, ZoomToExtent } from 'ol/control';\nimport { LineString, Point } from 'ol/geom';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Icon from 'ol/style/Icon';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport Overlay from 'ol/Overlay';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport TileLayer from 'ol/layer/Tile';\nimport Vector from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport View from 'ol/View';\nimport XYZ from 'ol/source/XYZ';\nimport { containsCoordinate } from 'ol/extent.js';\n\nexport { Feature, Map, Overlay, View };\nexport const control = { Control, Rotate, ScaleLine, Zoom, ZoomToExtent };\nexport const extent = { containsCoordinate };\nexport const geom = { LineString, Point };\nexport const layer = { TileLayer, VectorLayer };\nexport const proj = { fromLonLat, toLonLat };\nexport const source = { OSM, Vector, XYZ };\nexport const style = { Icon, Stroke, Style };\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n"],"names":["constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","options","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","BaseObject","pointerEvents","target_","map_","listenerKeys","render","setTarget","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","size","weight","variant","families","family","split","easeIn","t","Math","pow","easeOut","inAndOut","linear","Control","className","label","compassClassName","label_","textContent","classList","add","tipLabel","button","setAttribute","title","handleClick_","cssClasses","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","rotation","getRotation","PI","animate","easing","setRotation","frameState","viewState","transform","contains","remove","METERS_PER_UNIT","code_","code","units_","units","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","y","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","worldWidth","floor","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","round","ceil","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","getWorldsAway","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","levels","info","warn","none","level","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","updateElement_","setDpi","display","pointResolutionUnits","nominalCount","suffix","metersPerDegree","degrees","count","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","isNaN","html","createScaleBar","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","position","isLast","lengthString","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","assert","assertion","errorMessage","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","c","d","e","f","matrixPrecision","toString","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","Geometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","handleZoomToExtent","fitInternal","polygonFromExtent","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","IDLE","LOADING","LOADED","ERROR","EMPTY","hasArea","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setScale","listenImageChange","load","unlistenImageChange","ready","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","z","arg","_u","_v","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","h","cstr","space","parts","alpha","names","base","exec","dims","trim","parseFloat","baseHues","endsWith","red","orange","yellow","green","blue","purple","hsl","t1","t2","t3","s","MAX_CACHE_SIZE","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","parse","parseRgba","normalize","asArray","decodeFallback","image","src","then","catch","complete","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","ImageState","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","origin_","initialOptions_","onload","imageSize","setAnchor","getColor","iconImageSize","Property","CollectionEvent","array","unique_","unique","array_","assertUnique_","updateLength_","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","background_","background","LayerProperty","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","var_args","isDef","resolveConstraints","args","animateInternal","animationCount","Date","now","series","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","inView","layerState","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","getMapInternal","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","some","arrayLayerState","createRenderer","hasRenderer","asColorLike","iconCache","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","left","body","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","points_","points","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","defaultStyles","createDefaultStyle","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","Set","featureId","geometryType","encoded","typeHint","_","isStringColor","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","_ref","getTypeFromHint","withArgsCount","_ref2","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","_len2","argValidators","_key2","actualType","computeGeometryType","substring","getGeometries","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","styleFunction","toStyleFunction","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","inversePixelTransform","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","RenderEvent","BaseVectorLayer","renderedLayerStates","previousElement","layerIndex","sourceState","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Collection","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","expandClassName","collapseLabel","collapseClassName","collapseLabel_","activeLabel","toggleButton_","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","all","attribution","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","zoomByDelta","setActive","getActive","InteractionProperty","mapBrowserEvent","active","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","Rotate","rotateOptions","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","Tile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","LRUCache","pruneExceptNewestZ","fromKey","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","TileRange","containsTileRange","tileRange","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","half","TileSourceEvent","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","withinExtentAndZ","updateCacheSize","tileCount","useTile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","expandUrl","defaultTileLoadFunction","imageTile","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","instructions_","context_","Proxy","CanvasRenderingContext2D","pushMethodArgs_","_this","draw","instructionsAtIndex","instructionAtIndex","pixelContext","LayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","ZIndexContext","getRenderTransform","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","toTransformString","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","BaseTileLayer","CanvasTileLayerRenderer","maxEntries","rbush_","RBush_","items_","insert","extents","items","getAll","getInExtent","bbox","search","forEach_","forEachInExtent","toJSON","rbush","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoints","startOrientation","prevEndIndex","orientation","inflateEnds","linearRingssCenter","interiorPoints","getInteriorPointsOfMultiArray","getFlatMidpoints","midpoint","enableSimplifyTransformed","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","removed","setLoader","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","p","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","transformToString","clipped","userExtent","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","ExecutorGroup","ScaleLine","ZoomToExtent","geom","TileLayer","VectorLayer","CanvasVectorLayerRenderer","fromLonLat","toLonLat","lonLat","lon","OSM","Vector","module","exports","_maxEntries","_minEntries","leaf","_all","toBBox","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin"],"sourceRoot":""}